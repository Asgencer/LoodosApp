//
//  DetailViewController.swift
//  LoodosApp
//
//  Created by Semih Gençer on 16.11.2019.
//  Copyright © 2019 Semih Gençer. All rights reserved.
//

import UIKit
import Alamofire

class delete: UIViewController, UIScrollViewDelegate {

    var film : Film = Film(title: "Inception", year: 2014, releaseDate: "26 haz 2019", runtime: 148, genre: "Action, Adventure, Sci-Fi, Thriller", director: "Christopher Nolan", writer: "Christopher Nolan", actors: "Leonardo DiCaprio, Joseph Gordon-Levitt, Ellen Page, Tom Hardy", plot: "Dom Cobb is a skilled thief, the absolute best in the dangerous art of extraction, stealing valuable secrets from deep within the subconscious during the dream state, when the mind is at its most vulnerable. Cobb's rare ability has made him a coveted player in this treacherous new world of corporate espionage, but it has also made him an international fugitive and cost him everything he has ever loved. Now Cobb is being offered a chance at redemption. One last job could give him his life back but only if he can accomplish the impossible - inception. Instead of the perfect heist, Cobb and his team of specialists have to pull off the reverse: their task is not to steal an idea but to plant one. If they succeed, it could be the perfect crime. But no amount of careful planning or expertise can prepare the team for the dangerous enemy that seems to predict their every move. An enemy that only Cobb could have seen coming.", languages: "English, Japanese, French", country: "USA, UK", awards: "oscar and grammy", poster: "https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg", ratings: [Rating()], imdbRating: 8.8, imdbVotes: 1934568, imdbID: "imdb1234", type: "Movie", boxOffice: "$1,250,234", productor: "Warner Bros")

    let posterIView: UIImageView = {
        let iv = UIImageView()
        iv.image?.withRenderingMode(.alwaysTemplate)
        return iv
    }()
    
    let logoLabel: UILabel = {
        let label = UILabel()
        label.text = "IMDb"
        label.font = UIFont.boldSystemFont(ofSize: 12)
        label.textAlignment = .center
        label.textColor = UIColor(r: 240, g: 240, b: 240, a: 1)
        return label
    }()
    
    let voterCountLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textAlignment = .center
        label.textColor = UIColor(r: 240, g: 240, b: 240, a: 0.4)
        return label
    }()

    let separatorView: UIView = {
        let v = UIView()
        v.backgroundColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        return v
    }()

    let separator3View: UIView = {
        let v = UIView()
        v.backgroundColor = UIColor(r: 220, g: 220, b: 220)
        return v
    }()
    
    let genreScrollView: UIScrollView = {
        let v = UIScrollView()
        v.translatesAutoresizingMaskIntoConstraints = false
        v.backgroundColor = .cyan //UIColor(r: 50, g: 50, b: 50, a: 1)
        return v
    }()
    
    let posterView: UIView = {
        let view = UIView()
        view.backgroundColor = UIColor(r: 30, g: 30, b: 30, a: 1)
        return view
    }()
    
    let ratingView: UIView = {
        let view = UIView()
        view.backgroundColor = UIColor(r: 50, g: 50, b: 50, a: 1)
        return view
    }()
    
    let infoView: UIView = {
        let view = UIView()
        view.backgroundColor = UIColor(r: 50, g: 50, b: 50, a: 1)
        return view
    }()
    
    let titleLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.boldSystemFont(ofSize: 25)
        label.textColor = .white
        label.numberOfLines = 2;
        label.adjustsFontSizeToFitWidth = true;
        label.textAlignment = .center
        return label
    }()
    
    let titleInfoLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        label.numberOfLines = 1;
        label.textAlignment = .center
        return label
    }()
    
    let producerLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        label.numberOfLines = 2;
        return label
    }()
    
    let genreLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        label.numberOfLines = 2;
        return label
    }()
    
    let directorLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        label.numberOfLines = 2;
        return label
    }()
    
    let writerLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        label.numberOfLines = 2;
        return label
    }()
    
    let actorsLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        label.numberOfLines = 2;
        return label
    }()
    
    let languagesLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        label.numberOfLines = 2;
        return label
    }()
    
    let boxOfficeLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.5)
        label.numberOfLines = 2;
        return label
    }()
    
    let plotLabel: UILabel = {
        let label = UILabel()
        label.font = UIFont.systemFont(ofSize: 10)
        label.textColor = UIColor(r: 220, g: 220, b: 220, a: 0.8)
        label.adjustsFontSizeToFitWidth = true
        label.numberOfLines = 11;
        return label
    }()

    override func viewWillAppear(_ animated: Bool) {
        Alamofire.request((film.poster), method: .get)
            .validate()
            .responseData(completionHandler: { (responseData) in
                let image = UIImage(data: responseData.data!)
                self.posterIView.image = image
            })
        self.titleLabel.text = self.film.title
        self.titleInfoLabel.text = String(self.film.year) + "\t" + self.film.type + "\t" + String(self.film.runtime) + " min."
        self.voterCountLabel.text = self.film.imdbVotes.formattedWithSeparator + " users"
        
        let genreText: String = "Genre: " + self.film.genre
        genreLabel.text = genreText
        genreLabel.changeFont(ofText: "Genre: ", with: .boldSystemFont(ofSize: 10))
        genreLabel.changeTextColor(ofText: "Genre: ", with: .white)
        
        
        let producerText = "Producer: " + self.film.productor
        self.producerLabel.text = producerText
        producerLabel.changeTextColor(ofText: "Producer: ", with: .white)
        producerLabel.changeFont(ofText: "Producer: ", with: .boldSystemFont(ofSize: 10))
        
        let directorText = "Director: " + self.film.director
        self.directorLabel.text = directorText
        directorLabel.changeTextColor(ofText: "Director: ", with: .white)
        directorLabel.changeFont(ofText: "Director: ", with: .boldSystemFont(ofSize: 10))
        
        let writerText = "Writer: " + self.film.writer
        self.writerLabel.text = writerText
        writerLabel.changeTextColor(ofText: "Writer: ", with: .white)
        writerLabel.changeFont(ofText: "Writer: ", with: .boldSystemFont(ofSize: 10))
        
        let actorsText: String = "Actors: " + self.film.actors
        actorsLabel.text = actorsText
        actorsLabel.changeFont(ofText: "Actors: ", with: .boldSystemFont(ofSize: 10))
        actorsLabel.changeTextColor(ofText: "Actors: ", with: .white)
        
        let languagesText: String = "Languages: " + self.film.languages
        languagesLabel.text = languagesText
        languagesLabel.changeFont(ofText: "Languages: ", with: .boldSystemFont(ofSize: 10))
        languagesLabel.changeTextColor(ofText: "Languages: ", with: .white)
        
        let boxOfficeText: String = "Box Office: " + self.film.boxOffice
        boxOfficeLabel.text = boxOfficeText
        boxOfficeLabel.changeFont(ofText: "Box Office: ", with: .boldSystemFont(ofSize: 10))
        boxOfficeLabel.changeTextColor(ofText: "Box Office: ", with: .white)
        
        plotLabel.text = self.film.plot
    }
    
    let scrollView: UIScrollView = {
        let scrollView = UIScrollView()

        scrollView.translatesAutoresizingMaskIntoConstraints = false
        return scrollView
    }()

    let scrollViewContainer: UIStackView = {
        let view = UIStackView()

        view.axis = .vertical
        view.spacing = 10

        view.translatesAutoresizingMaskIntoConstraints = false
        return view
    }()

    let redView: UIView = {
        let view = UIView()
        view.heightAnchor.constraint(equalToConstant: 500).isActive = true
        view.backgroundColor = .red
        return view
    }()

    let blueView: UIView = {
        let view = UIView()
        view.heightAnchor.constraint(equalToConstant: 200).isActive = true
        view.backgroundColor = .blue
        return view
    }()

    let greenView: UIView = {
        let view = UIView()
        view.heightAnchor.constraint(equalToConstant: 1200).isActive = true
        view.backgroundColor = .green
        return view
    }()
//
    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = UIColor(r: 50, g: 50, b: 50, a: 1)
        setNavBar()
        
        view.addSubview(posterView)
        posterView.anchor(view.topAnchor, left: view.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 0, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: view.frame.width, heightConstant: view.frame.width*0.97)
        
        posterView.addSubview(posterIView)
        posterIView.anchor(posterView.topAnchor, left: posterView.leftAnchor, bottom: nil, right: posterView.rightAnchor, topConstant: 0, leftConstant: view.frame.width*0.2, bottomConstant: 0, rightConstant: view.frame.width*0.2, widthConstant: 0, heightConstant: view.frame.width*0.9)
        
        view.addSubview(titleLabel)
        titleLabel.anchor(posterView.bottomAnchor, left: view.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 4, leftConstant: 8, bottomConstant: 0, rightConstant: 8, widthConstant: 0, heightConstant: 0)
        
        view.addSubview(titleInfoLabel)
        titleInfoLabel.anchor(titleLabel.bottomAnchor, left: view.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 4, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        view.addSubview(separatorView)
        separatorView.anchor(titleInfoLabel.bottomAnchor, left: view.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 6, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 2)
        
        view.addSubview(ratingView)
        ratingView.anchor(separatorView.bottomAnchor, left: view.leftAnchor, bottom: nil, right: nil, topConstant: 0, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: view.frame.width*0.3, heightConstant: view.frame.width*0.3)
        
        ratingView.addSubview(logoLabel)
        logoLabel.anchor(ratingView.topAnchor, left: ratingView.leftAnchor, bottom: nil, right: ratingView.rightAnchor, topConstant: 8, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        let progressBars = animateCircle(center: CGPoint(x: view.frame.width*0.15, y: view.frame.width*0.15), rating: 9.9, radius: view.frame.width/14)
        print(ratingView.frame.midX)
        ratingView.layer.addSublayer(progressBars[1])
        ratingView.layer.addSublayer(progressBars[0])
        
        ratingView.addSubview(voterCountLabel)
        voterCountLabel.anchor(logoLabel.bottomAnchor, left: ratingView.leftAnchor, bottom: nil, right: ratingView.rightAnchor, topConstant: view.frame.width*0.19, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        view.addSubview(infoView)
        infoView.anchor(separatorView.bottomAnchor, left: ratingView.rightAnchor, bottom: nil, right: view.rightAnchor, topConstant: 0, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: view.frame.width*0.3)
        
        infoView.addSubview(genreLabel)
        genreLabel.anchor(infoView.topAnchor, left: infoView.leftAnchor, bottom: nil, right: infoView.rightAnchor, topConstant: 8, leftConstant: 2, bottomConstant: 0, rightConstant: 2, widthConstant: 0, heightConstant: 0)
        
        infoView.addSubview(producerLabel)
        producerLabel.anchor(genreLabel.bottomAnchor, left: genreLabel.leftAnchor, bottom: nil, right: genreLabel.rightAnchor, topConstant: 2, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        infoView.addSubview(directorLabel)
        directorLabel.anchor(producerLabel.bottomAnchor, left: producerLabel.leftAnchor, bottom: nil, right: producerLabel.rightAnchor, topConstant: 2, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        infoView.addSubview(writerLabel)
        writerLabel.anchor(directorLabel.bottomAnchor, left: directorLabel.leftAnchor, bottom: nil, right: directorLabel.rightAnchor, topConstant: 2, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        infoView.addSubview(actorsLabel)
        actorsLabel.anchor(writerLabel.bottomAnchor, left: writerLabel.leftAnchor, bottom: nil, right: writerLabel.rightAnchor, topConstant: 2, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        infoView.addSubview(languagesLabel)
        languagesLabel.anchor(actorsLabel.bottomAnchor, left: actorsLabel.leftAnchor, bottom: nil, right: actorsLabel.rightAnchor, topConstant: 2, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        infoView.addSubview(boxOfficeLabel)
        boxOfficeLabel.anchor(languagesLabel.bottomAnchor, left: languagesLabel.leftAnchor, bottom: nil, right: languagesLabel.rightAnchor, topConstant: 2, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
        
        scrollView.addSubview(scrollViewContainer)
        scrollViewContainer.addArrangedSubview(redView)
        scrollViewContainer.addArrangedSubview(blueView)
        scrollViewContainer.addArrangedSubview(greenView)

        scrollView.leadingAnchor.constraint(equalTo: view.leadingAnchor).isActive = true
        scrollView.trailingAnchor.constraint(equalTo: view.trailingAnchor).isActive = true
        scrollView.topAnchor.constraint(equalTo: view.topAnchor).isActive = true
        scrollView.bottomAnchor.constraint(equalTo: view.bottomAnchor).isActive = true

        scrollViewContainer.leadingAnchor.constraint(equalTo: scrollView.leadingAnchor).isActive = true
        scrollViewContainer.trailingAnchor.constraint(equalTo: scrollView.trailingAnchor).isActive = true
        scrollViewContainer.topAnchor.constraint(equalTo: scrollView.topAnchor).isActive = true
        scrollViewContainer.bottomAnchor.constraint(equalTo: scrollView.bottomAnchor).isActive = true
        // this is important for scrolling
        scrollViewContainer.widthAnchor.constraint(equalTo: scrollView.widthAnchor).isActive = true
        
        view.addSubview(plotLabel)
        plotLabel.anchor(infoView.bottomAnchor, left: view.leftAnchor, bottom: view.bottomAnchor, right: view.rightAnchor, topConstant: 0, leftConstant: 8, bottomConstant: 10, rightConstant: 8, widthConstant: 0, heightConstant: 0)
        
//        let stackView = UIStackView(frame: .zero)
//        stackView.translatesAutoresizingMaskIntoConstraints = false
//        stackView.axis = .horizontal
//        stackView.alignment = .top
//        stackView.distribution = .equalCentering
//        stackView.spacing = 10
//        stackView.backgroundColor = .cyan
//        infoView.addSubview(stackView)
//        stackView.leadingAnchor.constraint(equalTo: genreScrollView.leadingAnchor).isActive = true
//        stackView.trailingAnchor.constraint(equalTo: genreScrollView.trailingAnchor).isActive = true
//        stackView.bottomAnchor.constraint(equalTo: genreScrollView.bottomAnchor).isActive = true
//        stackView.topAnchor.constraint(equalTo: genreScrollView.topAnchor).isActive = true
//        stackView.widthAnchor.constraint(greaterThanOrEqualTo: genreScrollView.widthAnchor).isActive = true
        
//        let sv = UIScrollView(frame: view.bounds)
//        sv.backgroundColor = .white
//        sv.contentSize = posterView.bounds.size
//        sv.contentOffset = CGPoint(x: 1000, y: 450)
//
//        view.addSubview(sv)
//        sv.addSubview(posterView)
//        posterView.addSubview(posterView)
//        sv.addSubview(separatorView)
//        posterView.addSubview(posterView)
//        separatorView.addSubview(pLabel)
//        sView.addSubview(header)
//        view.addSubview(separatorView)
//        sView.addSubview(productIDLabel)
//        sView.addSubview(idLabel)
//        sView.addSubview(badgeLabel)
//        sView.addSubview(separator2View)
//        sView.addSubview(pLabel)
//        sView.addSubview(priceLabel)
//        sView.addSubview(oldPriceLabel)
//        sView.addSubview(installmentLabel)
//        sView.addSubview(separator3View)
//        sView.addSubview(addButton)
//        sView.addSubview(cartButton)

//        posterView.anchor(sv.topAnchor, left: sv.leftAnchor, bottom: nil, right: sv.rightAnchor, topConstant: 0, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: view.frame.width*0.9)
//        posterView.anchor(sv.topAnchor, left: sv.leftAnchor, bottom: nil, right: sv.rightAnchor, topConstant: 0, leftConstant: view.frame.width*0.2, bottomConstant: 0, rightConstant: view.frame.width*0.2, widthConstant: 0, heightConstant: view.frame.width)
//          sv.anchor(view.topAnchor, left: view.leftAnchor, bottom: view.bottomAnchor, right: view.rightAnchor, topConstant: 0, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
//        separatorView.anchor(posterView.bottomAnchor, left: sv.leftAnchor, bottom: nil, right: sv.rightAnchor, topConstant: 0, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 5000)
//        pLabel.anchor(nil, left: separatorView.leftAnchor, bottom: separatorView.bottomAnchor, right: nil, topConstant: 5, leftConstant: 5, bottomConstant: 0, rightConstant: 0, widthConstant: 30, heightConstant: 29)
//        header.anchor(posterView.bottomAnchor, left: view.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 8, leftConstant: 4, bottomConstant: 0, rightConstant: 4, widthConstant: 0, heightConstant: 0)
//        separatorView.anchor(header.bottomAnchor, left: view.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 8, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 6)
//        productIDLabel.anchor(separatorView.bottomAnchor, left: view.leftAnchor, bottom: nil, right: nil, topConstant: 8, leftConstant: 8, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
//        idLabel.anchor(productIDLabel.topAnchor, left: productIDLabel.rightAnchor, bottom: nil, right: nil, topConstant: 0, leftConstant: 4, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
//        badgeLabel.anchor(idLabel.topAnchor, left: nil, bottom: nil, right: view.rightAnchor, topConstant: 0, leftConstant: 0, bottomConstant: 0, rightConstant: 12, widthConstant: 0, heightConstant: 0)
//        separator2View.anchor(badgeLabel.bottomAnchor, left: view.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 8, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 6)
//        pLabel.anchor(separator2View.bottomAnchor, left: productIDLabel.leftAnchor, bottom: nil, right: nil, topConstant: 8, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
//        oldPriceLabel.anchor(pLabel.topAnchor, left: pLabel.rightAnchor, bottom: nil, right: nil, topConstant: 0, leftConstant: 14, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 0)
//        priceLabel.anchor(separator2View.bottomAnchor, left: nil, bottom: nil, right: view.rightAnchor, topConstant: 8, leftConstant: 0, bottomConstant: 0, rightConstant: 14, widthConstant: 0, heightConstant: 0)
//        installmentLabel.anchor(nil, left: pLabel.leftAnchor, bottom: priceLabel.bottomAnchor, right: nil, topConstant: 0, leftConstant: 0, bottomConstant: 7, rightConstant: 0, widthConstant: 0, heightConstant: 0)
//        separator3View.anchor(priceLabel.bottomAnchor, left: view.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 8, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 6)
//        addButton.anchor(separator3View.bottomAnchor, left: pLabel.leftAnchor, bottom: nil, right: view.rightAnchor, topConstant: 8, leftConstant: 0, bottomConstant: 0, rightConstant: 8, widthConstant: 0, heightConstant: 50)
//        cartButton.anchor(addButton.bottomAnchor, left: addButton.leftAnchor, bottom: nil, right: addButton.rightAnchor, topConstant: 4, leftConstant: 0, bottomConstant: 0, rightConstant: 0, widthConstant: 0, heightConstant: 50)
    }
    
//    func scrollViewDidScroll(_ scrollView: UIScrollView) {
//        if scrollView.contentOffset.x != 0 {
//            scrollView.contentOffset.x = 0
//        }
//    }

    @objc func addClicked(){
        alertMessageOk(title: "Uyarı", message: "Şu anda kullanılamamaktadır.")
    }

    func setNavBar() {
        self.navigationController?.view.backgroundColor = .green
        self.navigationController?.navigationBar.isTranslucent = false
        self.navigationController?.navigationBar.barTintColor = UIColor(r: 30, g: 30, b: 30, a: 1)
        let textAttributes = [NSAttributedString.Key.foregroundColor:UIColor.white]
        navigationController?.navigationBar.titleTextAttributes = textAttributes
        self.navigationItem.title = self.film.title+" (" + String(self.film.year) + ")"
    }
  
}

